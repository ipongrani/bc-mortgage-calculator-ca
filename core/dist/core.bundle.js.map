{"version":3,"file":"core.bundle.js","mappings":"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","sources":["webpack://mortgage_calculator_core/./src/calculateLoanPrincipal.js","webpack://mortgage_calculator_core/./src/calculateMortage.js","webpack://mortgage_calculator_core/./src/calculatePeriodicInterest.js","webpack://mortgage_calculator_core/./src/calculateTotalNumberOfPayments.js","webpack://mortgage_calculator_core/./src/cmhcPremiumCalculator.js","webpack://mortgage_calculator_core/mortgage_calculator_utilities/src/convertCurrencyToNumber.js","webpack://mortgage_calculator_core/mortgage_calculator_utilities/src/convertToNumeric.js","webpack://mortgage_calculator_core/mortgage_calculator_utilities/src/formatToDecimal.js","webpack://mortgage_calculator_core/mortgage_calculator_utilities/src/isEmpty.js","webpack://mortgage_calculator_core/mortgage_calculator_utilities/src/isNonNegativeNumber.js","webpack://mortgage_calculator_core/mortgage_calculator_utilities/src/validateAmmortizationPeriod.js","webpack://mortgage_calculator_core/mortgage_calculator_utilities/src/validateDownpayment.js","webpack://mortgage_calculator_core/mortgage_calculator_utilities/src/validatePaymentSchedule.js","webpack://mortgage_calculator_core/mortgage_calculator_utilities/webpack/bootstrap","webpack://mortgage_calculator_core/mortgage_calculator_utilities/webpack/runtime/define property getters","webpack://mortgage_calculator_core/mortgage_calculator_utilities/webpack/runtime/hasOwnProperty shorthand","webpack://mortgage_calculator_core/mortgage_calculator_utilities/webpack/runtime/make namespace object","webpack://mortgage_calculator_core/mortgage_calculator_utilities/index.js","webpack://mortgage_calculator_core/webpack/bootstrap","webpack://mortgage_calculator_core/webpack/runtime/define property getters","webpack://mortgage_calculator_core/webpack/runtime/hasOwnProperty shorthand","webpack://mortgage_calculator_core/webpack/runtime/make namespace object","webpack://mortgage_calculator_core/./index.js"],"sourcesContent":["import utilities from \"../../utils/dist/utilities.bundle.js\";\n\n\nconst {\n    isEmpty,\n    isNonNegativeNumber,\n    formatToDecimalPoint\n} = utilities;\n\n/** \n * @preserve\n * Calculates the loan principal amount.\n * \n * @param {number} propertyPrice - The amount paid monthly.\n * @param {number} downPayment - The annual interest rate (in decimal form, e.g., 0.05 for 5%).\n *\n * @returns {object} The calculated loanPrincipal, downpaymentRate, downpaymentPercentage.\n * \n */\n\nexport default (propertyPrice, downPayment) => {\n\n    \n    if (isEmpty(propertyPrice)) return ({error: 'property price is not invalid or not supplied'});\n    if (isEmpty(downPayment)) return ({error: 'down payment is not invalid or not supplied'});\n    if (!isNonNegativeNumber(propertyPrice)) return ({error: 'property price is not a valid number'});\n    if (!isNonNegativeNumber(downPayment)) return ({error: 'down payment is not a valid number'});\n    if (downPayment > propertyPrice) return ({error: 'down payment is over property price'});\n\n    const loanPrincipal = propertyPrice - downPayment;\n    const downpaymentRate = formatToDecimalPoint((downPayment / propertyPrice), 6);\n    const downpaymentPercentage = formatToDecimalPoint((downpaymentRate*100), 2)\n    \n  \n\n    return {\n        loanPrincipal,\n        downpaymentRate,\n        downpaymentPercentage: `${downpaymentPercentage}%`\n    };\n}","import utilities from \"../../utils/dist/utilities.bundle.js\";\n\nconst {\n    isEmpty,\n    isNonNegativeNumber,\n    formatToDecimalPoint\n} = utilities;\n\n\n\n/** \n * @preserve\n * Calculates Morgage based on:\n * \n * x = r*((1+r)**n)\n * y = ((1+r)**n)-1\n * M = P*(x/y)\n * \n * @param {number} P - Loan Principal. The loan amount after subtracting the down payment.\n * @param {number} r - The annual interest rate divided by the number of payments per year (periodicInterest).\n * @param {number} n - The total number of payments over the amortization period.\n *\n * @returns {number} The calculated amount per payment period.\n * \n */\n\n\nexport default (P, r, n) => {\n\n    if (isEmpty(P)) return ({error: 'loan amount is not valid or not supplied'});\n    if (isEmpty(r)) return ({error: 'periodic interest is not valid or not supplied'});\n    if (isEmpty(n)) return ({error: 'payment schedule is not valid or not supplied'});\n\n    if (!isNonNegativeNumber(P)) return ({error: 'loan amount is not a valid number'});\n    if (!isNonNegativeNumber(r)) return ({error: 'periodic interest is not a valid number'});\n    if (!isNonNegativeNumber(n)) return ({error: 'payment schedule is not a valid number'});\n\n\n    const x = r*((1+r)**n);\n    const y = ((1+r)**n)-1;\n    const _M = P*(x/y);\n    const mortgagePaymentPerPeriod = formatToDecimalPoint(_M, 2);\n\n    return mortgagePaymentPerPeriod;\n}","import utilities from \"../../utils/dist/utilities.bundle.js\";\n\nconst {\n    isEmpty,\n    isNonNegativeNumber,\n    formatToDecimalPoint,\n    validatePaymentSchedule\n} = utilities;\n\n\n\n/** \n * @preserve\n * Determine the Periodic Interest Rate.\n * \n * @param {number} annualInterestRate - The interest rate yearly. The annual interest rate (in decimal form, e.g., 0.05 for 5%)\n * @param {number} paymentSchedule - accelerated-bi-weekly, bi-weekly, monthly\n *\n * @returns {object} returns periodicInterestRate, formattedPeriodicInterest\n * \n */\n\n\nexport default (annualInterestRate, paymentSchedule) => {\n    \n    if (isEmpty(annualInterestRate)) return ({error: 'annual interest is not valid or not supplied'});\n    if (isEmpty(paymentSchedule)) return ({error: 'payment schedule is not valid or not supplied'});\n    if (!isNonNegativeNumber(annualInterestRate)) return ({error: 'property price is not a number'});\n\n   \n    const selectedPaymentSchedule = validatePaymentSchedule(paymentSchedule);\n    if (!selectedPaymentSchedule) return ({error: 'payment schedule is not valid or not supplied'});  \n\n    const periodicInterest = formatToDecimalPoint((annualInterestRate / selectedPaymentSchedule), 6);\n    const formattedPeriodicInterest = formatToDecimalPoint((periodicInterest*100), 2);\n    \n    return {\n        periodicInterestRate: periodicInterest,\n        formattedPeriodicInterest: `${formattedPeriodicInterest}%`\n    };\n}","import utilities from \"../../utils/dist/utilities.bundle.js\";\n\nconst {\n    isEmpty,\n    isNonNegativeNumber,\n    validAmmortizationPeriod,\n    validatePaymentSchedule\n} = utilities;\n\n\n\n\n\n/** \n * @preserve\n * Calculate total number of payments per year.\n * \n * @param {number} ammortizationPeriod - ammortization period ex. 25, 30, 40 (years).\n * @param {number} paymentSchedule - accelerated-bi-weekly, bi-weekly, monthly\n *\n * @returns {number} The calculated total count of payments.\n * \n */\n\n\n\nexport default (ammortizationPeriod, paymentSchedule) => {\n    \n    if (isEmpty(ammortizationPeriod)) return ({error: 'ammortization period is not valid or not supplied'});\n    if (!validAmmortizationPeriod(ammortizationPeriod)) return ({error: 'ammortization period is not valid'});\n    if (!isNonNegativeNumber(ammortizationPeriod)) return ({error: 'ammortization period is not a number'});\n    if (isEmpty(paymentSchedule)) return ({error: 'payment schedule is not valid or not supplied'});\n\n\n    const selectedPaymentSchedule = validatePaymentSchedule(paymentSchedule);\n    if (!selectedPaymentSchedule) return ({error: 'payment schedule is not valid or not supplied'});  \n\n    const totalPaymentCount = selectedPaymentSchedule * ammortizationPeriod;\n    \n    return totalPaymentCount;\n}","import utilities from \"../../utils/dist/utilities.bundle.js\";\n\nconst {\n    isEmpty,\n    isNonNegativeNumber,\n    formatToDecimalPoint\n} = utilities;\n\n\nconst mapRates = (downpaymentRate) => {\n    \n    const downPaymentPercentage = downpaymentRate * 100;\n\n    // Determine the CMHC Premium Rate\n    if (downPaymentPercentage >= 20) {\n        return 0; // 20% or higher\n    } \n    \n    if (downPaymentPercentage >= 15) {\n        return .0280; // 15% - 19.99%\n    } \n    \n    if (downPaymentPercentage >= 10) {\n        return .0310; // 10% - 14.99%\n    }\n\n\n    return .0400; // 5% - 9.99%\n\n};\n\n\n\n/** \n * @preserve\n * Calculate insurance premium.\n * \n * @param {number} loanPrincipal - original loan principal.\n * @param {number} downpaymentRate - downpayment rate for the property\n *\n * @returns {object} returns premiumRate, premiumPercent, premiumAmount, principalWithPremium.\n * \n */\n\n\n\nexport default (loanPrincipal, downpaymentRate) => {\n\n   \n    if (isEmpty(loanPrincipal)) return ({error: 'loan principal is not valid or not supplied'});\n    if (isEmpty(downpaymentRate)) return ({error: 'down payment is not nvalid or not supplied'});\n    if (!isNonNegativeNumber(loanPrincipal)) return ({error: 'loan principal is not a valid number'});\n    if (!isNonNegativeNumber(downpaymentRate)) return ({error: 'down payment is not a valid number'});\n    \n    const cmhcThreshold = .2;\n    if (downpaymentRate >= cmhcThreshold) {\n       return null;\n    }\n\n\n    const premiumRate = mapRates(downpaymentRate);\n    const premiumPercent = formatToDecimalPoint((premiumRate*100), 2);\n    const premiumAmount = loanPrincipal * premiumRate;\n    const principalWithPremium = loanPrincipal+premiumAmount;\n    \n    \n    return {\n        premiumRate,\n        premiumPercent: `${premiumPercent}%`,\n        premiumAmount,\n        principalWithPremium\n    };\n}","const convertCurrencyToNumber = (val) => {\n    const isString = typeof val === 'string';\n    const isNumber = typeof val === 'number';\n\n    if (isNumber) return val;\n\n    if (isString) {\n        const strippedString = val.replace(/[$,]/g, '');\n\n        const isValidFloat = !isNaN(Number(strippedString)) && Number(strippedString) >= 0;\n\n        if (isValidFloat) {\n            return parseFloat(strippedString);\n        }\n    }\n\n    return null;\n};\n\n\nexport default convertCurrencyToNumber","const convertToNumeric = (value) => {\n    if (typeof value === \"number\" && Number.isFinite(value) && value >= 0) {\n        return value; \n    }\n\n    if (typeof value === \"string\") {\n        const trimmedValue = value.replace(/ /g,''); \n        if (trimmedValue !== \"\" && !isNaN(trimmedValue) && (parseFloat(trimmedValue) >= 0.00)) {\n            const newValue =  parseFloat(trimmedValue);\n            return newValue;\n        }\n    }\n\n    return null; \n};\n\nexport default convertToNumeric;\n","const formatToDecimalPoint = (num, decimalPoint) => {\n\n    if (!num) return null;\n\n    const isNumValid = typeof num === 'number' ? true : false;\n    if (!isNumValid) return null;\n    \n\n    const isValidDecimalPoint = Number.isInteger(Number(decimalPoint)) && decimalPoint >= 0;\n    if (!isValidDecimalPoint) return null;\n\n    const formattedNum = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: decimalPoint,\n        maximumFractionDigits: decimalPoint,\n    }).format(num);\n    const cleanedNum = formattedNum.replace(/,/g, ''); \n    return parseFloat(cleanedNum);\n};\n\n\nexport default formatToDecimalPoint","\nconst isEmpty = (value) => {\n    return !value;\n}\n\n\nexport default isEmpty;","const isNonNegativeNumber = (value) => {\n    const validNumber = typeof value === \"number\" \n                            && Number.isFinite(value)\n                            && value >= 0\n                            && !isNaN(value);\n    return validNumber;\n}\n\n\nexport default isNonNegativeNumber;","const validAmmortizationPeriod = (value) => {\n\n    if (!Number.isInteger(value)) {\n        return false;\n    }\n\n    if (value < 5 || value > 30) {\n        return false;\n    }\n\n    if (value % 5 !== 0) {\n        return false;\n    }\n\n    return true;\n}\n\n\nexport default validAmmortizationPeriod;","\n\nexport default function validateDownpayment(loanPrincipal, downpayment) {\n    if (typeof loanPrincipal !== 'number' || typeof downpayment !== 'number' || loanPrincipal <= 0 || downpayment < 0) {\n        return false;\n    }\n\n    const minimumDownpayment = loanPrincipal * 0.05;\n    return downpayment >= minimumDownpayment;\n}","const payment_schedules = {\n    'accelerated-bi-weekly': 26,\n    'bi-weekly': 24,\n    'monthly': 12\n};\n\nconst validatePaymentSchedule = (paymentSchedule) => {\n   \n    const allowed_schedules = Object.keys(payment_schedules);\n    if (!allowed_schedules.includes(paymentSchedule)) return false;\n\n    const selectedPaymentSchedule = payment_schedules[paymentSchedule] || null;\n    \n    return selectedPaymentSchedule;\n }\n \n \n export default validatePaymentSchedule;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import isNonNegativeNumber from \"./src/isNonNegativeNumber.js\";\nimport isEmpty from \"./src/isEmpty.js\";\nimport formatToDecimalPoint from \"./src/formatToDecimal.js\";\nimport validAmmortizationPeriod from './src/validateAmmortizationPeriod.js';\nimport validatePaymentSchedule from \"./src/validatePaymentSchedule.js\";\nimport convertCurrencyToNumber from \"./src/convertCurrencyToNumber.js\";\nimport convertToNumeric from \"./src/convertToNumeric.js\";\nimport validateDownpayment from \"./src/validateDownpayment.js\";\n\n\nconst utilities = {\n    isNonNegativeNumber,\n    isEmpty,\n    formatToDecimalPoint,\n    validAmmortizationPeriod,\n    validatePaymentSchedule,\n    convertCurrencyToNumber,\n    convertToNumeric,\n    validateDownpayment\n};\n\nexport default utilities;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import calculateLoanPrincipal from \"./src/calculateLoanPrincipal.js\";\nimport calculatePeriodicInterest from \"./src/calculatePeriodicInterest.js\";\nimport calculateTotalNumberOfPayments from \"./src/calculateTotalNumberOfPayments.js\";\nimport calculateMortage from \"./src/calculateMortage.js\";\nimport cmhcPremiumCalculator from \"./src/cmhcPremiumCalculator.js\";\n\n\nconst core = {\n    calculateLoanPrincipal,\n    calculatePeriodicInterest,\n    calculateTotalNumberOfPayments,\n    calculateMortage,\n    cmhcPremiumCalculator\n};\n\nexport default core;"],"names":["isEmpty","utilities","isNonNegativeNumber","formatToDecimalPoint","propertyPrice","downPayment","error","loanPrincipal","downpaymentRate","downpaymentPercentage","concat","P","r","n","x","Math","pow","y","validatePaymentSchedule","annualInterestRate","paymentSchedule","selectedPaymentSchedule","periodicInterest","formattedPeriodicInterest","periodicInterestRate","validAmmortizationPeriod","ammortizationPeriod","premiumRate","downPaymentPercentage","mapRates","premiumPercent","premiumAmount","principalWithPremium","e","replace","isNaN","Number","parseFloat","isFinite","isInteger","t","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","monthly","a","Object","keys","includes","exports","o","d","defineProperty","enumerable","get","prototype","hasOwnProperty","call","Symbol","toStringTag","value","c","u","convertCurrencyToNumber","i","convertToNumeric","s","validateDownpayment","l","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__","definition","key","obj","prop","calculateLoanPrincipal","calculatePeriodicInterest","calculateTotalNumberOfPayments","calculateMortage","cmhcPremiumCalculator"],"sourceRoot":""}